{"version":3,"sources":["components/PizzaMaker/Pizza/PizzaIngredient/PizzaIngredient.js","components/PizzaMaker/Pizza/Pizza.js","components/PizzaMaker/PizzaControls/PizzaControls.js","pages/PizzaMaker/PizzaMaker.js","components/UI/Form/Form.js","components/UI/Input/Input.js","components/UI/ErrorModal/ErrorModal.js"],"names":["pizzaIngredient","props","ingredient","ingType","className","pizza","chosenCheese","passedIngredients","ing","ingredients","push","cheese","cheeses","PizzaIngredient","map","pizzaControls","currentPizzaPrice","toFixed","htmlFor","name","onChange","event","cheeseAdded","target","value","disabled","onClick","ingredientRemoved","ingredientAdded","additionAdded","PizzaMaker","state","modalOpen","orderForm","elementType","elementConfig","type","placeholder","validation","required","touched","street","phone","formIsValid","checkInputValidity","rules","isValid","trim","minLength","length","isEmail","test","inputChangedHandler","inputIdentifier","updatedOrderForm","valid","formValid","setState","formSubmitHandler","preventDefault","isAuthenticated","history","replace","closeModalHandler","orderPizzaHandler","orderData","customerInfo","additions","addition","totalPrice","currentPrice","onOrderPizza","this","onOrderCustomInit","onManageCheeses","orderSuccess","ordered","disabledBtns","key","selectedIngredients","id","isOrdered","allIngredients","concat","formInputs","details","inputsDisplayed","formElement","Input","validationRequired","inputChanged","Fragment","ErrorModal","errorShow","error","errorClicked","style","display","Modal","closeModal","cancelled","continued","listStyle","textAlign","padding","Pizza","PizzaControls","onAddIngredient","onRemoveIngredient","onManageAdditions","Form","formCustomClassname","formButtonText","submitBtnDisabled","submitForm","Component","connect","pizzaMaker","authenticate","token","loading","dispatch","actions","form","onSubmit","children","input","inputClasses","join","options","option","displayedValue","label","errorModal"],"mappings":"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","file":"static/js/3.d7c1258f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './pizza-ingredient.scss';\r\n\r\nconst pizzaIngredient = props => {\r\n  let ingredient = null;\r\n\r\n  switch(props.ingType) {\r\n    case(\"mozzarella\"):\r\n      ingredient = <div className=\"mozzarella\"></div>;\r\n      break;\r\n    case(\"havarti\"):\r\n      ingredient = <div className=\"havarti\"></div>;\r\n      break;\r\n    case(\"goatCheese\"):\r\n      ingredient = <div className=\"goat-cheese\"></div>;\r\n      break;\r\n    case(\"salmon\"):\r\n      ingredient = (\r\n        <div className=\"salmon\">\r\n          <div className=\"salmon__content\">\r\n            <div className=\"salmon--1\"></div>\r\n            <div className=\"salmon--2\"></div>\r\n            <div className=\"salmon--3\"></div>\r\n            <div className=\"salmon--4\"></div>\r\n            <div className=\"salmon--5\"></div>\r\n            <div className=\"salmon--6\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n    case(\"bacon\"):\r\n      ingredient = (\r\n        <div className=\"bacon\">\r\n          <div className=\"bacon__content\">\r\n            <div className=\"bacon--1\"></div>\r\n            <div className=\"bacon--2\"></div>\r\n            <div className=\"bacon--3\"></div>\r\n            <div className=\"bacon--4\"></div>\r\n            <div className=\"bacon--5\"></div>\r\n            <div className=\"bacon--6\"></div>\r\n            <div className=\"bacon--7\"></div>\r\n            <div className=\"bacon--8\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n    case(\"mushrooms\"):\r\n      ingredient = (\r\n        <div className=\"shrooms\">\r\n          <div className=\"shrooms__content\">\r\n            <div className=\"shrooms--1\"></div>\r\n            <div className=\"shrooms--2\"></div>\r\n            <div className=\"shrooms--3\"></div>\r\n            <div className=\"shrooms--4\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n    case(\"olives\"):\r\n      ingredient = (\r\n        <div className=\"olives\">\r\n          <div className=\"olives__content\">\r\n            <div className=\"olives--1\"></div>\r\n            <div className=\"olives--2\"></div>\r\n            <div className=\"olives--3\"></div>\r\n            <div className=\"olives--4\"></div>\r\n            <div className=\"olives--5\"></div>\r\n            <div className=\"olives--6\"></div>\r\n            <div className=\"olives--7\"></div>\r\n            <div className=\"olives--8\"></div>\r\n            <div className=\"olives--9\"></div>\r\n            <div className=\"olives--10\"></div>\r\n          </div>\r\n        </div>\r\n      );\r\n      break;\r\n    default:\r\n      ingredient = null;\r\n  }\r\n  return ingredient;\r\n}\r\n\r\nexport default pizzaIngredient;\r\n","import React from 'react';\r\nimport './pizza.scss';\r\nimport PizzaIngredient from './PizzaIngredient/PizzaIngredient';\r\n\r\nconst pizza = props => {\r\n  let passedIngredients = [];\r\n  for(const ing in props.ingredients) {\r\n    if(ing !== \"cheeses\" && ing !== \"addition\" && props.ingredients[ing]) {\r\n      passedIngredients.push(ing);\r\n    }\r\n  }\r\n  let chosenCheese;\r\n  for(const cheese in props.ingredients.cheeses) {\r\n    if(props.ingredients.cheeses[cheese]) {\r\n      chosenCheese = <PizzaIngredient ingType={cheese} />\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"pizza-build\">\r\n      <div className=\"pizza-build__crust\">\r\n        {chosenCheese}\r\n        {passedIngredients.map(ing => {\r\n          return <PizzaIngredient\r\n            key={ing} \r\n            ingType={ing} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default pizza;\r\n","import React from 'react';\r\nimport './pizza-controls.scss';\r\n\r\nconst pizzaControls = props => {\r\n  return (\r\n    <div className=\"pizza-controls\">\r\n      <p className=\"pizza-controls__price\">\r\n        Current price: $\r\n        <span>{props.currentPizzaPrice.toFixed(2)}</span>\r\n      </p>\r\n      <div className=\"pizza-controls__buttons\">\r\n        <div className=\"pizza-controls__cheeses pizza-controls__control\">\r\n          <label \r\n            htmlFor=\"cheeses\"\r\n            className=\"pizza-controls__label pizza-controls__label--cheeses\">cheeses</label>\r\n          <select name=\"cheeses\" onChange={event => props.cheeseAdded(event.target.value)}>\r\n            <option\r\n              value=\"mozzarella\">\r\n              mozzarella\r\n            </option>\r\n            <option \r\n              value=\"havarti\">\r\n              havarti\r\n            </option>\r\n            <option value=\"goatCheese\">\r\n              goat\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"pizza-controls__control pizza-controls__salmon\">\r\n          <p className=\"pizza-controls__label pizza-controls__label--salmon\">\r\n            salmon\r\n          </p>\r\n          <button \r\n            className=\"pizza-controls__btn btn-remove\"\r\n            disabled={!props.disabled[\"salmon\"]}\r\n            onClick={() => props.ingredientRemoved(\"salmon\")}>\r\n            remove\r\n          </button>\r\n          <button \r\n            className=\"pizza-controls__btn btn-add\"\r\n            disabled={props.disabled[\"salmon\"]}\r\n            onClick={() => props.ingredientAdded(\"salmon\")}>\r\n            add\r\n          </button>\r\n        </div>\r\n        <div className=\"pizza-controls__control pizza-controls__bacon\">\r\n          <p className=\"pizza-controls__label pizza-controls__label--bacon\">\r\n            bacon\r\n          </p>\r\n          <button \r\n            className=\"pizza-controls__btn btn-remove\"\r\n            disabled={!props.disabled[\"bacon\"]}\r\n            onClick={() => props.ingredientRemoved(\"bacon\")}>\r\n            remove\r\n          </button>\r\n          <button \r\n            className=\"pizza-controls__btn btn-add\"\r\n            disabled={props.disabled[\"bacon\"]}\r\n            onClick={() => props.ingredientAdded(\"bacon\")}>\r\n            add\r\n          </button>\r\n        </div>\r\n        <div className=\"pizza-controls__control pizza-controls__mushrooms\">\r\n          <p className=\"pizza-controls__label pizza-controls__label--mushrooms\">\r\n            mushrooms\r\n          </p>\r\n          <button \r\n            className=\"pizza-controls__btn btn-remove\"\r\n            disabled={!props.disabled[\"mushrooms\"]}\r\n            onClick={() => props.ingredientRemoved(\"mushrooms\")}>\r\n            remove\r\n          </button>\r\n          <button \r\n            className=\"pizza-controls__btn btn-add\"\r\n            disabled={props.disabled[\"mushrooms\"]}\r\n            onClick={() => props.ingredientAdded(\"mushrooms\")}>\r\n            add\r\n          </button>\r\n        </div>\r\n        <div className=\"pizza-controls__control pizza-controls__olives\">\r\n          <p className=\"pizza-controls__label pizza-controls__label--olives\">\r\n            olives\r\n          </p>\r\n          <button \r\n            className=\"pizza-controls__btn btn-remove\"\r\n            disabled={!props.disabled[\"olives\"]}\r\n            onClick={() => props.ingredientRemoved(\"olives\")}>\r\n            remove\r\n          </button>\r\n          <button \r\n            className=\"pizza-controls__btn btn-add\"\r\n            disabled={props.disabled[\"olives\"]}\r\n            onClick={() => props.ingredientAdded(\"olives\")}>\r\n            add\r\n          </button>\r\n        </div>\r\n        <div className=\"pizza-controls__control pizza-controls__addition\">\r\n          <label \r\n            htmlFor=\"addition\"\r\n            className=\"pizza-controls__label pizza-controls__label--cheeses\">additions</label>\r\n          <select \r\n            name=\"addition\"\r\n            onChange={event => props.additionAdded(event.target.value)}>\r\n            <option \r\n              value=\"\">\r\n            </option>\r\n            <option \r\n              value=\"ketchup\">\r\n              ketchup\r\n            </option>\r\n            <option value=\"mayo\">\r\n              mayo\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default pizzaControls\r\n","import React, { Component } from 'react';\r\nimport './pizza-maker.scss';\r\nimport Pizza from '../../components/PizzaMaker/Pizza/Pizza';\r\nimport PizzaControls from '../../components/PizzaMaker/PizzaControls/PizzaControls';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Form from '../../components/UI/Form/Form';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport ErrorModal from '../../components/UI/ErrorModal/ErrorModal';\r\n\r\nclass PizzaMaker extends Component {\r\n  state = {\r\n    modalOpen: false,\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\"\r\n        },\r\n        validation: {\r\n          required: true\r\n        },\r\n        touched: false,\r\n        value: \"\"\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Street\"\r\n        },\r\n        validation: {\r\n          required: true\r\n        },\r\n        touched: false,\r\n        value: \"\"\r\n      },\r\n      phone: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Phone Number\"\r\n        },\r\n        validation: {\r\n          required: true\r\n        },\r\n        touched: false,\r\n        value: \"\"\r\n      },\r\n    },\r\n    formIsValid: false\r\n  }\r\n  componentDidMount() {\r\n    this.props.onOrderCustomInit();\r\n    if(this.props.ingredients.cheeses[\"mozzarella\"] === false) {\r\n      this.props.onManageCheeses(\"mozzarella\");\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if(!this.props.orderSuccess && this.props.ordered) {\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  }\r\n  checkInputValidity = (rules, value) => {\r\n    let isValid = true;\r\n\r\n    if(rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if(rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if(rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm,\r\n      [inputIdentifier]: {\r\n        ...this.state.orderForm[inputIdentifier],\r\n        touched: true,\r\n        value: event.target.value,\r\n        valid: this.checkInputValidity(this.state.orderForm[inputIdentifier].validation, event.target.value)\r\n      }\r\n    };\r\n\r\n    let formValid = true;\r\n    for(const inputIdentifier in updatedOrderForm) {\r\n      formValid = updatedOrderForm[inputIdentifier].valid && formValid;\r\n    }\r\n\r\n    this.setState({\r\n      orderForm: updatedOrderForm,\r\n      formIsValid: formValid\r\n    })\r\n  }\r\n  formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    if(this.props.isAuthenticated) {\r\n      this.setState({modalOpen: true})\r\n    } else {\r\n      this.props.history.replace(\"/sign-up\");\r\n    }\r\n  }\r\n  closeModalHandler = () => {\r\n    this.setState({modalOpen: false})\r\n  }\r\n  orderPizzaHandler = () => {\r\n    const orderData = {\r\n      ingredients: {}\r\n    };\r\n    for(const cheese in this.props.ingredients.cheeses) {\r\n      if(this.props.ingredients.cheeses[cheese]) {\r\n        orderData.cheese = cheese;\r\n      }\r\n    }\r\n\r\n    for(const ing in this.props.ingredients) {\r\n      if(ing !== \"cheeses\" && ing !== \"addition\" && this.props.ingredients[ing]) {\r\n        orderData.ingredients[ing] = \"added\"\r\n      }\r\n    }\r\n\r\n    orderData.customerInfo = {\r\n      name: this.state.orderForm.name.value,\r\n      street: this.state.orderForm.street.value,\r\n      phone: this.state.orderForm.phone.value\r\n    }\r\n\r\n    orderData.additions = this.props.ingredients.addition;\r\n\r\n    orderData.totalPrice = this.props.currentPrice;\r\n\r\n    this.props.onOrderPizza(orderData);\r\n    this.closeModalHandler();\r\n  }\r\n  render() {\r\n    let disabledBtns = {\r\n      ...this.props.ingredients\r\n    };\r\n    for(const key in disabledBtns) {\r\n      if(key !== \"cheeses\") {\r\n        disabledBtns[key] = disabledBtns[key] ? true : false;\r\n      }\r\n    }\r\n    const selectedIngredients = [];\r\n    const cheeses = [];\r\n    for(const ing in this.props.ingredients.cheeses) {\r\n      cheeses.push({\r\n        id: ing,\r\n        name: ing,\r\n        isOrdered: this.props.ingredients.cheeses[ing]\r\n      })\r\n    }\r\n    for(const ing in this.props.ingredients) {\r\n      if(ing !== \"cheeses\" && ing !== \"addition\" && this.props.ingredients[ing]) {\r\n        selectedIngredients.push({\r\n          id: ing,\r\n          name: ing\r\n        })\r\n      }\r\n    }\r\n    const allIngredients = cheeses.concat(selectedIngredients);\r\n    const addition = this.props.ingredients.addition;\r\n\r\n    let formInputs = [];\r\n    for(const key in this.state.orderForm) {\r\n      formInputs.push({\r\n        id: key,\r\n        details: this.state.orderForm[key]\r\n      });\r\n    }\r\n\r\n    let inputsDisplayed = formInputs.map(formElement => {\r\n      return <Input\r\n            key={formElement.id}\r\n            elementType={formElement.details.elementType}\r\n            elementConfig={formElement.details.elementConfig}\r\n            value={formElement.details.value}\r\n            touched={formElement.details.touched}\r\n            validationRequired={formElement.details.validation}\r\n            valid={formElement.details.valid}\r\n            inputChanged={event => this.inputChangedHandler(event, formElement.id)} />\r\n    });\r\n    if(!this.props.isAuthenticated) {\r\n      inputsDisplayed = null;\r\n    }\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal\r\n          errorShow={this.props.error}\r\n          errorClicked={this.props.onOrderCustomInit}>\r\n            Order failed. Try again later, or order directly via phone.\r\n        </ErrorModal>\r\n        <div \r\n          className=\"pizza-maker__order-finished\"\r\n          style={{\r\n            display: this.props.orderSuccess ? \"block\" : \"none\"\r\n          }}>\r\n          Your order have been successfull! See you in no time!\r\n        </div>\r\n        <Modal\r\n          modalOpen={this.state.modalOpen}\r\n          closeModal={this.closeModalHandler}\r\n          cancelled={this.closeModalHandler}\r\n          continued={this.orderPizzaHandler}>\r\n            <h2>\r\n              Your ingredients:\r\n            </h2>\r\n            <ul style={{\r\n                listStyle: \"disc\",\r\n                textAlign: \"left\",\r\n                padding: \"2rem\"\r\n              }}>\r\n              {allIngredients.map(ing => {\r\n                return (\r\n                  <li\r\n                    key={ing.id}>\r\n                    {ing.name}\r\n                  </li>\r\n                );\r\n              })}\r\n              <li>\r\n                additions: {addition}\r\n              </li>\r\n            </ul>\r\n            <p>Total Price: ${this.props.currentPrice.toFixed(2)}</p>\r\n        </Modal>\r\n        <h1 className=\"pizza-maker__title\">\r\n          pizza maker\r\n        </h1>\r\n        <section className=\"pizza-maker__content\">\r\n          <p className=\"pizza-maker__content-info\">\r\n            This is our pizza maker app. You can choose ingredients manually, according to your tastes, make up your prefered pizza model, order it, and we will make it for you for real. \r\n            Note that you can have only one type of cheese on your pizza.\r\n            Additions are free.\r\n          </p>\r\n          <article className=\"pizza-maker__maker\">\r\n            <Pizza \r\n              ingredients={this.props.ingredients}/>\r\n            <PizzaControls\r\n              disabled={disabledBtns}\r\n              currentPizzaPrice={this.props.currentPrice} \r\n              ingredientAdded={this.props.onAddIngredient}\r\n              ingredientRemoved={this.props.onRemoveIngredient}\r\n              cheeseAdded={this.props.onManageCheeses}\r\n              additionAdded={this.props.onManageAdditions}/>\r\n          </article>\r\n          <div className=\"pizza-maker__form\">\r\n            <h4 className=\"pizza-maker__form-title\">\r\n              enter your order info\r\n            </h4>\r\n            <Form\r\n              formCustomClassname=\"pizza-maker\"\r\n              formButtonText={this.props.isAuthenticated ? \"order now\" : \"sign up to order\"}\r\n              submitBtnDisabled={inputsDisplayed === null ? true : this.state.formIsValid}\r\n              submitForm={this.formSubmitHandler}>\r\n                {inputsDisplayed}\r\n            </Form>\r\n          </div>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.pizzaMaker.ingredients,\r\n    currentPrice: state.pizzaMaker.currentPrice,\r\n    orderSuccess: state.pizzaMaker.orderSuccess,\r\n    isAuthenticated: state.authenticate.token !== null,\r\n    ordered: state.pizzaMaker.ordered,\r\n    loading: state.pizzaMaker.loading,\r\n    error: state.pizzaMaker.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddIngredient: (name) => dispatch(actions.addIngredient(name)),\r\n    onRemoveIngredient: (name) => dispatch(actions.removeIngredient(name)),\r\n    onManageCheeses: (cheese) => dispatch(actions.manageCheeses(cheese)),\r\n    onManageAdditions: (addition) => dispatch(actions.manageAdditions(addition)),\r\n    onOrderCustomInit: () => dispatch(actions.orderCustomInit()),\r\n    onOrderPizza: (orderData) => dispatch(actions.orderCustomPizza(orderData))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaMaker);\r\n","import React from 'react';\r\nimport './form.scss';\r\n\r\nconst form = props => {\r\n  return (\r\n    <form \r\n      className={`form form__${props.formCustomClassname}`}\r\n      onSubmit={props.submitForm}>\r\n      {props.children}\r\n      <button \r\n        className=\"form__button\"\r\n        disabled={!props.submitBtnDisabled}>\r\n        {props.formButtonText}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default form\r\n","import React from 'react';\r\nimport './input.scss';\r\n\r\nconst input = props => {\r\n  let input = null;\r\n\r\n  let inputClasses = [\"form-input\"];\r\n\r\n  if(props.validationRequired && props.touched && !props.valid) {\r\n    inputClasses.push(\"input-invalid\");\r\n  }\r\n  if(props.valid) {\r\n    inputClasses.push(\"input-valid\");\r\n  }\r\n  switch(props.elementType) {\r\n    case(\"input\"):\r\n      input = <input\r\n        className={inputClasses.join(\" \")}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.inputChanged} />;\r\n      break;\r\n    case(\"select\"):\r\n      input = (\r\n        <select\r\n          value={props.value}\r\n          className={inputClasses.join(\" \")}\r\n          name={props.elementConfig.name}\r\n          onChange={props.inputChanged}>\r\n            {props.elementConfig.options.map(option => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}>\r\n                {option.displayedValue}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      );\r\n      break;\r\n    case(\"textarea\"):\r\n      input = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.inputChanged}>\r\n\r\n        </textarea>\r\n      );\r\n      break;\r\n    default:\r\n      input = <input />;\r\n  }\r\n  return (\r\n    <div className=\"input-container\">\r\n      {props.label ? <label className=\"input-label\">{props.label}</label> : null}\r\n      {input}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default input;\r\n","import React from 'react';\r\nimport './error-modal.scss';\r\n\r\nconst errorModal = props => {\r\n  return (\r\n    <div \r\n      className={props.errorShow ? \"error-modal error-show\" : \"error-modal\"}>\r\n      <p className=\"error-modal__text\">\r\n        {props.children}\r\n      </p>\r\n      <button \r\n        className=\"error-modal__btn\"\r\n        onClick={props.errorClicked}>\r\n        OK\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default errorModal;\r\n"],"sourceRoot":""}