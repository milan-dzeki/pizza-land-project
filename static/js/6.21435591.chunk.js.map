{"version":3,"sources":["pages/SignUp/SignUp.js","components/UI/Form/Form.js","components/UI/Input/Input.js","components/UI/ErrorModal/ErrorModal.js"],"names":["SignUp","state","signUpForm","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","formIsValid","checkInMethod","errorShow","checkInputValidity","rules","isValid","trim","length","test","inputChangedHandler","event","inputIdentifier","formElements","target","formValid","setState","switchCheckinMethodHandler","stateCheckin","formSubmitHandler","form","preventDefault","props","onAuthenticate","this","orderStore","pizzaMakerPrice","isAuthenticated","error","authDone","history","push","formInputs","key","id","details","formCustomClassname","formButtonText","submitBtnDisabled","submitForm","map","formElement","validationRequired","inputChanged","page","Fragment","errorClicked","onAuthClearError","className","style","display","onClick","fontSize","textAlign","padding","onLogout","width","margin","backgroundColor","border","outline","cursor","Component","connect","authenticate","token","pizzaTypes","pizzaMaker","currentPrice","dispatch","actions","onSubmit","children","disabled","input","inputClasses","join","onChange","name","options","option","displayedValue","label","errorModal"],"mappings":"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","file":"static/js/6.21435591.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './sign-up.scss';\r\nimport Form from '../../components/UI/Form/Form';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport ErrorModal from '../../components/UI/ErrorModal/ErrorModal';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    signUpForm: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your Email\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Create Password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false,\r\n    checkInMethod: \"signup\",\r\n    errorShow: false\r\n  }\r\n  componentDidUpdate() {\r\n    if(this.props.orderStore.length === 0 && \r\n      this.props.pizzaMakerPrice < 4.2 &&\r\n      this.props.isAuthenticated && \r\n      !this.props.error &&\r\n      this.props.authDone) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    if(this.props.isAuthenticated && \r\n      this.props.orderStore.length > 0 && \r\n      !this.props.error &&\r\n      this.props.authDone) {\r\n      this.props.history.push(\"/order\");\r\n    }\r\n    if(this.props.isAuthenticated &&\r\n      this.props.orderStore.length === 0 && \r\n      this.props.pizzaMakerPrice > 4.2 &&\r\n      this.props.authDone &&\r\n      !this.props.error) {\r\n      this.props.history.push(\"/pizza-maker\");\r\n    }\r\n  }\r\n  checkInputValidity = (rules, value) => {\r\n    let isValid = true;\r\n\r\n    if(rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if(rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if(rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const formElements = {\r\n      ...this.state.signUpForm,\r\n      [inputIdentifier]: {\r\n        ...this.state.signUpForm[inputIdentifier],\r\n        value: event.target.value,\r\n        valid: this.checkInputValidity(this.state.signUpForm[inputIdentifier].validation, event.target.value),\r\n        touched: true\r\n      }\r\n    };\r\n\r\n    let formValid = true;\r\n    for(const inputIdentifier in formElements) {\r\n      formValid = formElements[inputIdentifier].valid && formValid\r\n    }\r\n\r\n    this.setState({\r\n      signUpForm: formElements,\r\n      formIsValid: formValid\r\n    });\r\n  }\r\n  switchCheckinMethodHandler = (stateCheckin) => {\r\n    if(stateCheckin === \"signup\") {\r\n      this.setState({checkInMethod: \"login\"})\r\n    } else if(stateCheckin === \"login\") {\r\n      this.setState({checkInMethod: \"signup\"})\r\n    }\r\n  }\r\n  formSubmitHandler = (event, form) => {\r\n    event.preventDefault();\r\n    this.props.onAuthenticate(form.email.value, form.password.value, this.state.checkInMethod);\r\n\r\n    // if(this.props.orderStore.length === 0 && this.props.pizzaMakerPrice < 4.2) {\r\n    //   this.props.history.push(\"/\");\r\n    // }\r\n    // if(this.props.orderStore.length > 0) {\r\n    //   this.props.history.push(\"/order\");\r\n    // }\r\n    // if(this.props.orderStore.length === 0 && this.props.pizzaMakerPrice > 4.2) {\r\n    //   this.props.history.push(\"/pizza-maker\");\r\n    // }\r\n  }\r\n  render() {\r\n    let formInputs = [];\r\n\r\n    for(const key in this.state.signUpForm) {\r\n      formInputs.push({\r\n        id: key,\r\n        details: this.state.signUpForm[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <Form\r\n        formCustomClassname=\"signup\"\r\n        formButtonText={this.state.checkInMethod === \"signup\" ? \"sign up\" : \"log in\"}\r\n        submitBtnDisabled={this.state.formIsValid}\r\n        submitForm={event => this.formSubmitHandler(event, this.state.signUpForm)}>\r\n        {formInputs.map(formElement => {\r\n          return <Input\r\n            key={formElement.id}\r\n            elementType={formElement.details.elementType}\r\n            elementConfig={formElement.details.elementConfig}\r\n            value={formElement.details.value}\r\n            touched={formElement.details.touched}\r\n            validationRequired={formElement.details.validation}\r\n            valid={formElement.details.valid}\r\n            inputChanged={event => this.inputChangedHandler(event, formElement.id)} />\r\n        })}\r\n      </Form>\r\n    );\r\n\r\n    let page = (\r\n      <React.Fragment>\r\n        <ErrorModal\r\n          errorShow={this.props.error}\r\n          errorClicked={this.props.onAuthClearError}>\r\n            {this.state.checkInMethod === \"signup\" ? \r\n              \"Sign up failed. Email may already exist. Try another one.\" :\r\n              \"Incorrect email or password\"}\r\n        </ErrorModal>\r\n        <h1 className=\"checkin__title\">\r\n          {this.state.checkInMethod === \"signup\" ? \"sign up\" : \"log in\"}\r\n        </h1>\r\n        <section className=\"checkin__content\">\r\n          <p className=\"checkin__content-info\">\r\n            In order to be able to order pizzas you need to create account on our page. Enter your contact info in order to proceed.\r\n          </p>\r\n          {form}\r\n          <div className=\"checkin__switch\">\r\n            <p \r\n              className=\"checkin__switch-text\"\r\n              style={{\r\n                display: this.state.checkInMethod === \"signup\" ? \"block\" : \"none\"\r\n              }}>\r\n              Already have an account?\r\n            </p>\r\n            <button \r\n              className=\"checkin__switch-btn\"\r\n              onClick={() => this.switchCheckinMethodHandler(this.state.checkInMethod)}>\r\n              switch to {this.state.checkInMethod === \"signup\" ? \"log in\" : \"sign up\"}\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if(this.props.isAuthenticated) {\r\n      page = (\r\n        <React.Fragment>\r\n          <p style={{fontSize: \"3rem\", textAlign: \"center\", padding: \"5rem\"}}>You are allready logged in</p>\r\n          <button \r\n            onClick={this.props.onLogout}\r\n            style={{\r\n              fontSize: \"2rem\",\r\n              width: \"10rem\",\r\n              margin: \"0 auto 2rem auto\",\r\n              backgroundColor: \"#eee\",\r\n              textAlign: \"center\",\r\n              padding: \"0.5rem 1rem\",\r\n              display: \"block\",\r\n              border: \"none\",\r\n              outline: \"none\",\r\n              cursor: \"pointer\"\r\n            }}>log out</button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return page;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.authenticate.token !== null,\r\n    orderStore: state.pizzaTypes.orderStore,\r\n    pizzaMakerPrice: state.pizzaMaker.currentPrice,\r\n    error: state.authenticate.error,\r\n    authDone: state.authenticate.authDone\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuthenticate: (email, password, checkInMethod) => dispatch(actions.authenticate(email, password, checkInMethod)),\r\n    onLogout: () => dispatch(actions.authLogout()),\r\n    onAuthClearError: () => dispatch(actions.authClearError())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\nimport './form.scss';\r\n\r\nconst form = props => {\r\n  return (\r\n    <form \r\n      className={`form form__${props.formCustomClassname}`}\r\n      onSubmit={props.submitForm}>\r\n      {props.children}\r\n      <button \r\n        className=\"form__button\"\r\n        disabled={!props.submitBtnDisabled}>\r\n        {props.formButtonText}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default form\r\n","import React from 'react';\r\nimport './input.scss';\r\n\r\nconst input = props => {\r\n  let input = null;\r\n\r\n  let inputClasses = [\"form-input\"];\r\n\r\n  if(props.validationRequired && props.touched && !props.valid) {\r\n    inputClasses.push(\"input-invalid\");\r\n  }\r\n  if(props.valid) {\r\n    inputClasses.push(\"input-valid\");\r\n  }\r\n  switch(props.elementType) {\r\n    case(\"input\"):\r\n      input = <input\r\n        className={inputClasses.join(\" \")}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.inputChanged} />;\r\n      break;\r\n    case(\"select\"):\r\n      input = (\r\n        <select\r\n          value={props.value}\r\n          className={inputClasses.join(\" \")}\r\n          name={props.elementConfig.name}\r\n          onChange={props.inputChanged}>\r\n            {props.elementConfig.options.map(option => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}>\r\n                {option.displayedValue}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      );\r\n      break;\r\n    case(\"textarea\"):\r\n      input = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.inputChanged}>\r\n\r\n        </textarea>\r\n      );\r\n      break;\r\n    default:\r\n      input = <input />;\r\n  }\r\n  return (\r\n    <div className=\"input-container\">\r\n      {props.label ? <label className=\"input-label\">{props.label}</label> : null}\r\n      {input}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default input;\r\n","import React from 'react';\r\nimport './error-modal.scss';\r\n\r\nconst errorModal = props => {\r\n  return (\r\n    <div \r\n      className={props.errorShow ? \"error-modal error-show\" : \"error-modal\"}>\r\n      <p className=\"error-modal__text\">\r\n        {props.children}\r\n      </p>\r\n      <button \r\n        className=\"error-modal__btn\"\r\n        onClick={props.errorClicked}>\r\n        OK\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default errorModal;\r\n"],"sourceRoot":""}