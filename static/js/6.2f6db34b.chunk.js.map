{"version":3,"sources":["pages/SignUp/SignUp.js","components/UI/Form/Form.js","components/UI/Input/Input.js"],"names":["SignUp","state","signUpForm","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","formIsValid","checkInMethod","errorShow","checkInputValidity","rules","isValid","trim","length","test","inputChangedHandler","event","inputIdentifier","formElements","target","formValid","setState","switchCheckinMethodHandler","stateCheckin","formSubmitHandler","form","preventDefault","props","onAuthenticate","orderStore","pizzaMakerPrice","history","push","formInputs","key","this","id","details","formCustomClassname","formButtonText","submitBtnDisabled","submitForm","map","formElement","validationRequired","inputChanged","page","Fragment","className","style","display","onClick","isAuthenticated","fontSize","textAlign","padding","onLogout","width","margin","backgroundColor","border","outline","cursor","Component","connect","authenticate","token","pizzaTypes","pizzaMaker","currentPrice","error","dispatch","actions","onSubmit","children","disabled","input","inputClasses","join","onChange","name","options","option","displayedValue","label"],"mappings":"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","file":"static/js/6.2f6db34b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './sign-up.scss';\r\nimport Form from '../../components/UI/Form/Form';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    signUpForm: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your Email\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Create Password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    },\r\n    formIsValid: false,\r\n    checkInMethod: \"signup\",\r\n    errorShow: false\r\n  }\r\n\r\n  checkInputValidity = (rules, value) => {\r\n    let isValid = true;\r\n\r\n    if(rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if(rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if(rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const formElements = {\r\n      ...this.state.signUpForm,\r\n      [inputIdentifier]: {\r\n        ...this.state.signUpForm[inputIdentifier],\r\n        value: event.target.value,\r\n        valid: this.checkInputValidity(this.state.signUpForm[inputIdentifier].validation, event.target.value),\r\n        touched: true\r\n      }\r\n    };\r\n\r\n    let formValid = true;\r\n    for(const inputIdentifier in formElements) {\r\n      formValid = formElements[inputIdentifier].valid && formValid\r\n    }\r\n\r\n    this.setState({\r\n      signUpForm: formElements,\r\n      formIsValid: formValid\r\n    });\r\n  }\r\n  switchCheckinMethodHandler = (stateCheckin) => {\r\n    if(stateCheckin === \"signup\") {\r\n      this.setState({checkInMethod: \"login\"})\r\n    } else if(stateCheckin === \"login\") {\r\n      this.setState({checkInMethod: \"signup\"})\r\n    }\r\n  }\r\n  formSubmitHandler = (event, form) => {\r\n    event.preventDefault();\r\n    this.props.onAuthenticate(form.email.value, form.password.value, this.state.checkInMethod);\r\n\r\n    if(this.props.orderStore.length === 0 && this.props.pizzaMakerPrice < 4.2) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    if(this.props.orderStore.length > 0) {\r\n      this.props.history.push(\"/order\");\r\n    }\r\n    if(this.props.orderStore.length === 0 && this.props.pizzaMakerPrice > 4.2) {\r\n      this.props.history.push(\"/pizza-maker\");\r\n    }\r\n  }\r\n  render() {\r\n    let formInputs = [];\r\n\r\n    for(const key in this.state.signUpForm) {\r\n      formInputs.push({\r\n        id: key,\r\n        details: this.state.signUpForm[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <Form\r\n        formCustomClassname=\"signup\"\r\n        formButtonText={this.state.checkInMethod === \"signup\" ? \"sign up\" : \"log in\"}\r\n        submitBtnDisabled={this.state.formIsValid}\r\n        submitForm={event => this.formSubmitHandler(event, this.state.signUpForm)}>\r\n        {formInputs.map(formElement => {\r\n          return <Input\r\n            key={formElement.id}\r\n            elementType={formElement.details.elementType}\r\n            elementConfig={formElement.details.elementConfig}\r\n            value={formElement.details.value}\r\n            touched={formElement.details.touched}\r\n            validationRequired={formElement.details.validation}\r\n            valid={formElement.details.valid}\r\n            inputChanged={event => this.inputChangedHandler(event, formElement.id)} />\r\n        })}\r\n      </Form>\r\n    );\r\n\r\n    let page = (\r\n      <React.Fragment>\r\n        <h1 className=\"checkin__title\">\r\n          {this.state.checkInMethod === \"signup\" ? \"sign up\" : \"log in\"}\r\n        </h1>\r\n        <section className=\"checkin__content\">\r\n          <p className=\"checkin__content-info\">\r\n            In order to be able to order pizzas you need to create account on our page. Enter your contact info in order to proceed.\r\n          </p>\r\n          {form}\r\n          <div className=\"checkin__switch\">\r\n            <p \r\n              className=\"checkin__switch-text\"\r\n              style={{\r\n                display: this.state.checkInMethod === \"signup\" ? \"block\" : \"none\"\r\n              }}>\r\n              Already have an account?\r\n            </p>\r\n            <button \r\n              className=\"checkin__switch-btn\"\r\n              onClick={() => this.switchCheckinMethodHandler(this.state.checkInMethod)}>\r\n              switch to {this.state.checkInMethod === \"signup\" ? \"log in\" : \"sign up\"}\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n\r\n    if(this.props.isAuthenticated) {\r\n      page = (\r\n        <React.Fragment>\r\n          <p style={{fontSize: \"3rem\", textAlign: \"center\", padding: \"5rem\"}}>You are allready logged in</p>\r\n          <button \r\n            onClick={this.props.onLogout}\r\n            style={{\r\n              fontSize: \"2rem\",\r\n              width: \"10rem\",\r\n              margin: \"0 auto 2rem auto\",\r\n              backgroundColor: \"#eee\",\r\n              textAlign: \"center\",\r\n              padding: \"0.5rem 1rem\",\r\n              display: \"block\",\r\n              border: \"none\",\r\n              outline: \"none\",\r\n              cursor: \"pointer\"\r\n            }}>log out</button>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    return page;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.authenticate.token !== null,\r\n    orderStore: state.pizzaTypes.orderStore,\r\n    pizzaMakerPrice: state.pizzaMaker.currentPrice,\r\n    error: state.authenticate.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuthenticate: (email, password, checkInMethod) => dispatch(actions.authenticate(email, password, checkInMethod)),\r\n    onLogout: () => dispatch(actions.authLogout())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\nimport './form.scss';\r\n\r\nconst form = props => {\r\n  return (\r\n    <form \r\n      className={`form form__${props.formCustomClassname}`}\r\n      onSubmit={props.submitForm}>\r\n      {props.children}\r\n      <button \r\n        className=\"form__button\"\r\n        disabled={!props.submitBtnDisabled}>\r\n        {props.formButtonText}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default form\r\n","import React from 'react';\r\nimport './input.scss';\r\n\r\nconst input = props => {\r\n  let input = null;\r\n\r\n  let inputClasses = [\"form-input\"];\r\n\r\n  if(props.validationRequired && props.touched && !props.valid) {\r\n    inputClasses.push(\"input-invalid\");\r\n  }\r\n  if(props.valid) {\r\n    inputClasses.push(\"input-valid\");\r\n  }\r\n  switch(props.elementType) {\r\n    case(\"input\"):\r\n      input = <input\r\n        className={inputClasses.join(\" \")}\r\n        {...props.elementConfig}\r\n        value={props.value}\r\n        onChange={props.inputChanged} />;\r\n      break;\r\n    case(\"select\"):\r\n      input = (\r\n        <select\r\n          value={props.value}\r\n          className={inputClasses.join(\" \")}\r\n          name={props.elementConfig.name}\r\n          onChange={props.inputChanged}>\r\n            {props.elementConfig.options.map(option => (\r\n              <option\r\n                key={option.value}\r\n                value={option.value}>\r\n                {option.displayedValue}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      );\r\n      break;\r\n    case(\"textarea\"):\r\n      input = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.inputChanged}>\r\n\r\n        </textarea>\r\n      );\r\n      break;\r\n    default:\r\n      input = <input />;\r\n  }\r\n  return (\r\n    <div className=\"input-container\">\r\n      {props.label ? <label className=\"input-label\">{props.label}</label> : null}\r\n      {input}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default input;\r\n"],"sourceRoot":""}