{"version":3,"sources":["components/About/Employees/EmployeesSliderElement/EmployeesSliderElement.js","components/About/Employees/SingleEmployee/SingleEmployee.js","pages/About/Employees/Employees.js"],"names":["employeesSliderElement","props","className","employeeSlideClassname","slideElPosition","src","employeeImg","alt","employeeName","employeeBio","singleEmployee","classname","imageUrl","name","style","marginRight","textTransform","fontWeight","job","speciality","onClick","showSlide","Employees","showSliderHandler","employeeType","employeeIndex","setState","sliderShow","slideElementIndex","slideGroup","closeSlideHandler","previousSlideElement","prevState","nextSlideElement","state","this","length","renderEmployees","map","employee","index","SingleEmployee","id","employees","makers","delivery","sellers","nutritionists","Fragment","Slider","sliderClosed","prevSlide","nextSlide","person","personIndex","sliderPosition","slideElementClassname","bio","Component","connect"],"mappings":"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","file":"static/js/7.15fa9477.chunk.js","sourcesContent":["import React from 'react';\r\nimport './employees-slider-element.scss';\r\n\r\nconst employeesSliderElement = props => {\r\n  return (\r\n    <div className={`employee-slider-el ${props.employeeSlideClassname} ${props.slideElPosition}`}>\r\n      <div className=\"employee-slider-el__img\">\r\n        <img src={props.employeeImg} alt={props.employeeName}/>\r\n      </div>\r\n      <div className=\"employee-slider-el__info\">\r\n        <p className=\"employee-slider-el__name\">\r\n          {props.employeeName}\r\n        </p>\r\n        <p className=\"employee-slider-el__bio\">\r\n          {props.employeeBio}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default employeesSliderElement\r\n","import React from 'react';\r\n\r\nconst singleEmployee = props => {\r\n  return (\r\n    <div className={props.classname}>\r\n      <div className={`${props.classname}-photo`}>\r\n        <img src={props.imageUrl} alt={props.name} />\r\n      </div>\r\n      <div className={`${props.classname}-info`}>\r\n        <p className={`${props.classname}-name`}>\r\n          {props.name}\r\n        </p>\r\n        <p className={`${props.classname}-job`}>\r\n          <span style={{marginRight: \"0.6rem\", textTransform: \"capitalize\", fontWeight: \"bold\"}}>job:</span>\r\n          <span>{props.job}</span>\r\n        </p>\r\n        <p className={`${props.classname}-speciality`}>\r\n          <span style={{marginRight: \"0.6rem\", textTransform: \"capitalize\", fontWeight: \"bold\"}}>speciality:</span>\r\n          <span>{props.speciality}</span>\r\n        </p>\r\n        <button \r\n          className={`${props.classname}-expand`}\r\n          onClick={props.showSlide}>\r\n          expand\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default singleEmployee;\r\n\r\n// export const singleEmployee = (employeeType) => {\r\n//   let employeePerson = employeeType.map(employee => {\r\n//     return (\r\n//       <div\r\n//         key={employee.id}\r\n//         className={employee.classname}>\r\n//           <div className={`${employee.classname}-photo`}>\r\n//             <img src={employee.imageUrl} alt={employee.name} />\r\n//           </div>\r\n//           <div className={`${employee.classname}-info`}>\r\n//             <p className={`${employee.classname}-name`}>\r\n//               {employee.name}\r\n//             </p>\r\n//             <p className={`${employee.classname}-job`}>\r\n//               <span style={{marginRight: \"0.6rem\", textTransform: \"capitalize\", fontWeight: \"bold\"}}>job:</span>\r\n//               <span>{employee.job}</span>\r\n//             </p>\r\n//             <p className={`${employee.classname}-speciality`}>\r\n//               <span style={{marginRight: \"0.6rem\", textTransform: \"capitalize\", fontWeight: \"bold\"}}>speciality:</span>\r\n//               <span>{employee.speciality}</span>\r\n//             </p>\r\n//             <button className={`${employee.classname}-expand`}>\r\n//               expand\r\n//             </button>\r\n//           </div>\r\n//       </div>\r\n//     );\r\n//   })\r\n//   return employeePerson;\r\n// }\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './employees.scss';\r\nimport { connect } from 'react-redux';\r\nimport Slider from '../../../components/UI/Slider/Slider';\r\nimport EmployeeSliderElement from '../../../components/About/Employees/EmployeesSliderElement/EmployeesSliderElement';\r\nimport SingleEmployee from '../../../components/About/Employees/SingleEmployee/SingleEmployee';\r\n\r\nclass Employees extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sliderShow: false,\r\n      slideElementIndex: 0,\r\n      slideGroup: \"pizza maker\"\r\n    }\r\n    this.slideGroup = null;\r\n  }\r\n  componentDidUpdate() {\r\n    if(this.state.slideElementIndex < 0) {\r\n      this.setState({\r\n        slideElementIndex: this.slideGroup.length - 1\r\n      })\r\n    }\r\n    if(this.state.slideElementIndex > this.slideGroup.length - 1) {\r\n      this.setState({\r\n        slideElementIndex: 0\r\n      })\r\n    }\r\n  }\r\n  showSliderHandler = (employeeType, employeeIndex) => {\r\n    this.setState({\r\n      sliderShow: true,\r\n      slideElementIndex: employeeIndex,\r\n      slideGroup: employeeType\r\n    })\r\n  }\r\n  closeSlideHandler = () => {\r\n    this.setState({\r\n      sliderShow: false,\r\n      slideElementIndex: 0\r\n    })\r\n  }\r\n  previousSlideElement = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        slideElementIndex: prevState.slideElementIndex - 1\r\n      }\r\n    })\r\n  }\r\n  nextSlideElement = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        slideElementIndex: prevState.slideElementIndex + 1\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const renderEmployees = employeeType => {\r\n      let employeeList = employeeType.map((employee, index) => {\r\n        return <SingleEmployee\r\n          key={employee.id}\r\n          classname={employee.classname}\r\n          imageUrl={employee.imageUrl}\r\n          name={employee.name}\r\n          job={employee.job}\r\n          speciality={employee.speciality}\r\n          showSlide={() => this.showSliderHandler(employee.job, index)} />\r\n      })\r\n      return employeeList;\r\n    };\r\n\r\n    if(this.state.slideGroup === \"pizza maker\") {\r\n      this.slideGroup = this.props.employees.makers;\r\n    } else if(this.state.slideGroup === \"delivery guy\") {\r\n      this.slideGroup = this.props.employees.delivery;\r\n    } else if(this.state.slideGroup === \"pizza selling\") {\r\n      this.slideGroup = this.props.employees.sellers;\r\n    } else if(this.state.slideGroup === \"nutritionist\") {\r\n      this.slideGroup = this.props.employees.nutritionists;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Slider\r\n          sliderShow={this.state.sliderShow}\r\n          sliderClosed={this.closeSlideHandler}\r\n          prevSlide={this.previousSlideElement}\r\n          nextSlide={this.nextSlideElement}\r\n          >\r\n          {this.slideGroup.map((person, personIndex) => {\r\n            let sliderPosition = \"nextSlide\";\r\n\r\n            if(personIndex === this.state.slideElementIndex) {\r\n              sliderPosition = \"activeSlide\";\r\n            }\r\n            if(personIndex === this.state.slideElementIndex - 1 || (this.state.slideElementIndex === 0 && personIndex === this.slideGroup.length - 1)) {\r\n              sliderPosition = \"lastSlide\";\r\n            }\r\n            return <EmployeeSliderElement\r\n              key={person.id}\r\n              employeeImg={person.imageUrl}\r\n              employeeName={person.name}\r\n              employeeSlideClassname={person.slideElementClassname}\r\n              slideElPosition={sliderPosition}\r\n              employeeBio={person.bio} />\r\n          })}\r\n        </Slider>\r\n        <h1 className=\"employees__title\">\r\n          our employees\r\n        </h1>\r\n        <section className=\"employees__content\">\r\n          <p className=\"employees__content-info\">\r\n            These are our devoted employees. They are always there to make your life more enjoyable by making and delivering most delicious meals.\r\n          </p>\r\n          <article className=\"employees__people employees__people--makers\">\r\n            <h3 className=\"employees__people-title\">\r\n              our pizza makers\r\n            </h3>\r\n            <div className=\"employees__people-content\">\r\n              {renderEmployees(this.props.employees.makers)}\r\n            </div>\r\n          </article>\r\n          <article className=\"employees__people employees__people--delivery\">\r\n            <h3 className=\"employees__people-title\">\r\n              our delivery team\r\n            </h3>\r\n            <div className=\"employees__people-content\">\r\n              {renderEmployees(this.props.employees.delivery)}\r\n            </div>\r\n          </article>\r\n          <article className=\"employees__people employees__people--sellers\">\r\n            <h3 className=\"employees__people-title\">\r\n              our pizza sellers\r\n            </h3>\r\n            <div className=\"employees__people-content\">\r\n              {renderEmployees(this.props.employees.sellers)}\r\n            </div>\r\n          </article>\r\n          <article className=\"employees__people employees__people--nutritionists\">\r\n            <h3 className=\"employees__people-title\">\r\n              our nutrition specialists\r\n            </h3>\r\n            <div className=\"employees__people-content\">\r\n              {renderEmployees(this.props.employees.nutritionists)}\r\n            </div>\r\n          </article>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    employees: state.employees.employees\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Employees);\r\n\r\n"],"sourceRoot":""}