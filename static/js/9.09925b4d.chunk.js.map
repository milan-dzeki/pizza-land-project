{"version":3,"sources":["components/PizzaTypes/SinglePizzaInfo/SinglePizzaInfo.js","pages/PizzaTypes/PizzaTypes.js","components/PizzaTypes/FilterPizzaTypes.js"],"names":["singlePizzaInfo","props","Fragment","Backdrop","show","clicked","hideInfo","className","src","pizzaImg","alt","pizzaName","pizzaIngredients","map","ing","onClick","addPizzaToOrder","PizzaTypes","state","showInfo","pizza","pizzaTypes","showPizzaInfo","setState","hidePizzaInfo","addPizzaToOrderStore","onAddPizzaToOrderStore","history","replace","this","onSetPizzaTypeToAll","pizzas","pizzaState","pizzaType","filteredPizzas","filter","length","imageUrl","id","name","filterPizzaTypes","filterType","SinglePizzaInfo","ingredients","onChangePizzaType","Component","connect","dispatch","actions"],"mappings":"sRAuCeA,EAnCS,SAAAC,GACtB,OACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CAAUC,KAAMH,EAAMG,KAAMC,QAASJ,EAAMK,WAC3C,sBAAKC,UAAWN,EAAMG,KAAO,6BAA+B,aAA5D,UACE,qBAAKG,UAAU,kBAAf,SACE,qBAAKC,IAAKP,EAAMQ,SAAUC,IAAMT,EAAMU,cAExC,sBAAKJ,UAAU,mBAAf,UACE,mBAAGA,UAAU,mBAAb,SACGN,EAAMU,YAET,mBAAGJ,UAAU,wBAAb,0BAGA,oBAAIA,UAAU,0BAAd,SACGN,EAAMW,iBAAiBC,KAAI,SAAAC,GAC1B,OACE,6BACGA,GADMA,QAMf,wBACEP,UAAU,kBACVQ,QAASd,EAAMe,gBAFjB,iCCrBJC,E,4MACJC,MAAQ,CACNC,UAAU,EACVC,MAAO,EAAKnB,MAAMoB,WAAW,I,EAU/BC,cAAgB,SAACF,GACf,EAAKG,SAAS,CACZJ,UAAU,EACVC,W,EAGJI,cAAgB,WACd,EAAKD,SAAS,CACZJ,UAAU,K,EAGdM,qBAAuB,SAACL,GACtB,EAAKnB,MAAMyB,uBAAuBN,GAClC,EAAKnB,MAAM0B,QAAQC,QAAQ,UAC3B,EAAKL,SAAS,CAACJ,UAAU,K,uDAtB3B,WACEU,KAAK5B,MAAM6B,wB,kCAEb,WACED,KAAKN,SAAS,CACZJ,UAAU,M,oBAmBd,WAAU,IAAD,OACDY,ECnCsB,SAACC,EAAYC,EAAWX,GACtD,IAAIY,EAAiBF,EAAWG,QAAO,SAAAf,GAAK,OAAIA,EAAMa,MA0BtD,OAxB6B,IAA1BC,EAAeE,SAChBF,EAAiBF,GAEJE,EAAerB,KAAI,SAAAO,GAChC,OACE,qBAEEb,UAAU,eAFZ,UAGI,qBAAKA,UAAU,oBAAf,SACE,qBAAKC,IAAKY,EAAMiB,SAAU3B,IAAKU,EAAMkB,OAEvC,sBAAK/B,UAAU,qBAAf,UACE,mBAAGA,UAAU,qBAAb,SACGa,EAAMmB,OAET,wBAAQhC,UAAU,oBAClBQ,QAAS,kBAAMO,EAAcF,IAD7B,yBATCA,EAAMkB,OD0BAE,CAAiBX,KAAK5B,MAAMoB,WAAYQ,KAAK5B,MAAMwC,WAAYZ,KAAKP,eAEnF,OACE,eAAC,IAAMpB,SAAP,WACE,cAACwC,EAAD,CACEtC,KAAMyB,KAAKX,MAAMC,SACjBV,SAAUoB,KAAKX,MAAME,MAAMiB,SAC3B1B,UAAWkB,KAAKX,MAAME,MAAMmB,KAC5B3B,iBAAkBiB,KAAKX,MAAME,MAAMuB,YACnCrC,SAAUuB,KAAKL,cACfR,gBAAiB,kBAAM,EAAKS,qBAAqB,EAAKP,MAAME,UAC9D,oBAAIb,UAAU,qBAAd,yBAGA,0BAASA,UAAU,uBAAnB,UACE,mBAAGA,UAAU,4BAAb,mOAGA,0BAASA,UAAU,uBAAnB,UACE,mBAAGA,UAAU,6BAAb,gCAGA,sBAAKA,UAAU,+BAAf,UACE,wBACEA,UAAqC,QAA1BsB,KAAK5B,MAAMwC,WAAuB,sCAAwC,2BACrF1B,QAAS,kBAAM,EAAKd,MAAM2C,kBAAkB,QAF9C,iBAKA,wBACErC,UAAqC,UAA1BsB,KAAK5B,MAAMwC,WAAyB,wCAA0C,6BACzF1B,QAAS,kBAAM,EAAKd,MAAM2C,kBAAkB,UAF9C,mBAKA,wBACErC,UAAqC,eAA1BsB,KAAK5B,MAAMwC,WAA8B,6CAA+C,kCACnG1B,QAAS,kBAAM,EAAKd,MAAM2C,kBAAkB,eAF9C,wBAKA,wBACErC,UAAqC,cAA1BsB,KAAK5B,MAAMwC,WAA6B,4CAA8C,iCACjG1B,QAAS,kBAAM,EAAKd,MAAM2C,kBAAkB,cAF9C,uBAKA,wBACErC,UAAqC,SAA1BsB,KAAK5B,MAAMwC,WAAwB,uCAAyC,4BACvF1B,QAAS,kBAAM,EAAKd,MAAM2C,kBAAkB,SAF9C,yBAOJ,yBAASrC,UAAU,sBAAnB,SACE,6BACGwB,gB,GAlFUc,aA0GVC,uBAfS,SAAA5B,GACtB,MAAO,CACLG,WAAYH,EAAMG,WAAWA,WAC7BoB,WAAYvB,EAAMG,WAAWoB,eAIN,SAAAM,GACzB,MAAO,CACLH,kBAAmB,SAACH,GAAD,OAAgBM,EAASC,IAAwBP,KACpEX,oBAAqB,kBAAMiB,EAASC,QACpCtB,uBAAwB,SAACN,GAAD,OAAW2B,EAASC,IAA6B5B,QAI9D0B,CAA6C7B","file":"static/js/9.09925b4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './single-pizza-info.scss';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst singlePizzaInfo = props => {\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop show={props.show} clicked={props.hideInfo}/>\r\n      <div className={props.show ? \"pizza-info show-pizza-info\" : \"pizza-info\"}>\r\n        <div className=\"pizza-info__img\">\r\n          <img src={props.pizzaImg} alt= {props.pizzaName}/>\r\n        </div>\r\n        <div className=\"pizza-info__info\">\r\n          <p className=\"pizza-info__name\">\r\n            {props.pizzaName}\r\n          </p>\r\n          <p className=\"pizza-info__ing-title\">\r\n            ingredients:\r\n          </p>\r\n          <ul className=\"pizza-info__ingredients\">\r\n            {props.pizzaIngredients.map(ing => {\r\n              return (\r\n                <li key={ing}>\r\n                  {ing}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <button \r\n            className=\"pizza-info__btn\"\r\n            onClick={props.addPizzaToOrder}>\r\n            order now\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default singlePizzaInfo;\r\n","import React, { Component } from 'react';\r\nimport './pizza-types.scss';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport { filterPizzaTypes } from '../../components/PizzaTypes/FilterPizzaTypes';\r\nimport SinglePizzaInfo from '../../components/PizzaTypes/SinglePizzaInfo/SinglePizzaInfo';\r\n\r\nclass PizzaTypes extends Component {\r\n  state = {\r\n    showInfo: false,\r\n    pizza: this.props.pizzaTypes[0]\r\n  }\r\n  componentDidMount() {\r\n    this.props.onSetPizzaTypeToAll();\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      showInfo: false\r\n    });\r\n  }\r\n  showPizzaInfo = (pizza) => {\r\n    this.setState({\r\n      showInfo: true,\r\n      pizza\r\n    });\r\n  }\r\n  hidePizzaInfo = () => {\r\n    this.setState({\r\n      showInfo: false\r\n    })\r\n  }\r\n  addPizzaToOrderStore = (pizza) => {\r\n    this.props.onAddPizzaToOrderStore(pizza);\r\n    this.props.history.replace(\"/order\");\r\n    this.setState({showInfo: false})\r\n  }\r\n  render() {\r\n    const pizzas = filterPizzaTypes(this.props.pizzaTypes, this.props.filterType, this.showPizzaInfo);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <SinglePizzaInfo\r\n          show={this.state.showInfo}\r\n          pizzaImg={this.state.pizza.imageUrl}\r\n          pizzaName={this.state.pizza.name}\r\n          pizzaIngredients={this.state.pizza.ingredients}\r\n          hideInfo={this.hidePizzaInfo}\r\n          addPizzaToOrder={() => this.addPizzaToOrderStore(this.state.pizza)} />\r\n        <h1 className=\"pizza-types__title\">\r\n          pizza types\r\n        </h1>\r\n        <section className=\"pizza-types__content\">\r\n          <p className=\"pizza-types__content-info\">\r\n            These are all pizza types that we have. We hope you will find what you are looking for. As you can see, we have variety of choices. You can filter pizza types according to your preferences and order what you like.\r\n          </p>\r\n          <article className=\"pizza-types__filters\">\r\n            <p className=\"pizza-types__filters-title\">\r\n              Choose pizza types\r\n            </p>\r\n            <div className=\"pizza-types__filters-buttons\">\r\n              <button \r\n                className={this.props.filterType === \"all\" ? \"pizza-types__filters-all btn-active\" : \"pizza-types__filters-all\"}\r\n                onClick={() => this.props.onChangePizzaType(\"all\")}>\r\n                all\r\n              </button>\r\n              <button       \r\n                className={this.props.filterType === \"vegan\" ? \"pizza-types__filters-vegan btn-active\" : \"pizza-types__filters-vegan\"}\r\n                onClick={() => this.props.onChangePizzaType(\"vegan\")}>\r\n                vegan\r\n              </button>\r\n              <button \r\n                className={this.props.filterType === \"vegeterian\" ? \"pizza-types__filters-vegeterian btn-active\" : \"pizza-types__filters-vegeterian\"}\r\n                onClick={() => this.props.onChangePizzaType(\"vegeterian\")}>\r\n                vegeterian\r\n              </button>\r\n              <button \r\n                className={this.props.filterType === \"mushrooms\" ? \"pizza-types__filters-mushrooms btn-active\" : \"pizza-types__filters-mushrooms\"}\r\n                onClick={() => this.props.onChangePizzaType(\"mushrooms\")}>\r\n                mushrooms\r\n              </button>\r\n              <button \r\n                className={this.props.filterType === \"meat\" ? \"pizza-types__filters-meat btn-active\" : \"pizza-types__filters-meat\"}\r\n                onClick={() => this.props.onChangePizzaType(\"meat\")}>\r\n                meats\r\n              </button>\r\n            </div>\r\n          </article>\r\n          <article className=\"pizza-types__pizzas\">\r\n            <ul>\r\n              {pizzas}\r\n            </ul>\r\n          </article>\r\n        </section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pizzaTypes: state.pizzaTypes.pizzaTypes,\r\n    filterType: state.pizzaTypes.filterType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChangePizzaType: (filterType) => dispatch(actions.changePizzaType(filterType)),\r\n    onSetPizzaTypeToAll: () => dispatch(actions.setPizzaTypeToAll()),\r\n    onAddPizzaToOrderStore: (pizza) => dispatch(actions.addPizzaToOrderStore(pizza))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PizzaTypes);\r\n","import React from 'react';\r\n\r\nexport const filterPizzaTypes = (pizzaState, pizzaType, showPizzaInfo) => {\r\n  let filteredPizzas = pizzaState.filter(pizza => pizza[pizzaType]);\r\n\r\n  if(filteredPizzas.length === 0) {\r\n    filteredPizzas = pizzaState;\r\n  }\r\n  let pizzaDom = filteredPizzas.map(pizza => {\r\n    return (\r\n      <li\r\n        key={pizza.id}\r\n        className=\"single-pizza\">\r\n          <div className=\"single-pizza__img\">\r\n            <img src={pizza.imageUrl} alt={pizza.id} />\r\n          </div>\r\n          <div className=\"single-pizza__info\">\r\n            <p className=\"single-pizza__name\">\r\n              {pizza.name}\r\n            </p>\r\n            <button className=\"single-pizza__btn\"\r\n            onClick={() => showPizzaInfo(pizza)}>\r\n              expand\r\n            </button>\r\n          </div>\r\n      </li>\r\n    );\r\n  })\r\n\r\n  return pizzaDom;\r\n}"],"sourceRoot":""}